{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/hero-detail/hero-detail.component.ts","webpack:///src/app/hero-detail/hero-detail.component.html","webpack:///src/app/hero-search/hero-search.component.ts","webpack:///src/app/hero-search/hero-search.component.html","webpack:///src/app/hero.service.ts","webpack:///src/app/heroes/heroes.component.ts","webpack:///src/app/heroes/heroes.component.html","webpack:///src/app/in-memory-data.service.ts","webpack:///src/app/message.service.ts","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","dataEncapsulation","declarations","providers","bootstrap","DashboardComponent","heroService","heroes","getHeroes","subscribe","slice","HeroDetailComponent","route","location","getHero","snapshot","paramMap","get","hero","back","updateHero","goBack","save","HeroSearchComponent","searchTerms","term","next","heroes$","pipe","searchHeroes","search","HeroService","messageService","http","heroesUrl","httpOptions","headers","_","log","handleError","put","url","message","add","operation","result","error","console","post","newHero","trim","x","length","providedIn","HeroesComponent","name","addHero","push","filter","h","deleteHero","InMemoryDataService","Math","max","map","MessageService","messages","MessagesComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { HeroesComponent } from './heroes/heroes.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent\n  },\n  {\n    path: 'heroes',\n    component: HeroesComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent\n  },\n  {\n    path: 'detail/:id',\n    component: HeroDetailComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Tour of Heroes';\n}\n","<h1>{{ title }}</h1>\n<nav>\n    <a routerLink=\"/dashboard\">Dashboard</a>\n    <a routerLink=\"/heroes\">Heroes</a>\n</nav>\n<router-outlet></router-outlet>\n<app-messages></app-messages>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { FormsModule } from '@angular/forms';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n// 模拟数据服务器\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\nimport { HeroSearchComponent } from './hero-search/hero-search.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeroesComponent,\n    HeroDetailComponent,\n    MessagesComponent,\n    DashboardComponent,\n    HeroSearchComponent,\n    HeroSearchComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false }\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../Hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  heroes: Hero[] = [];\n\n  constructor(\n    private heroService: HeroService\n  ) { }\n\n  ngOnInit(): void {\n    this.getHeroes();\n  }\n\n  // 获取Top英雄列表\n  getHeroes(): void {\n    this.heroService.getHeroes().subscribe(heroes => this.heroes = heroes.slice(1, 5));\n  }\n}\n","<h3>Top Heroes</h3>\n<div class=\"grid grid-pad\">\n    <a *ngFor=\"let hero of heroes\" class=\"col-1-4\"\n        routerLink=\"/detail/{{ hero.id }}\">\n        <div class=\"module hero\">\n            <h4>{{ hero.name }}</h4>\n        </div>\n    </a>\n</div>\n\n<app-hero-search></app-hero-search>","import { Component, Input, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Hero } from '../Hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: ['./hero-detail.component.scss']\n})\nexport class HeroDetailComponent implements OnInit {\n  @Input() hero: Hero;\n\n  constructor(\n    private route: ActivatedRoute,\n    private heroService: HeroService,\n    private location: Location  // 一个Angular服务，用来与浏览器打交道（要手动导入）\n  ) { }\n\n  ngOnInit(): void {\n    this.getHero();\n  }\n\n  getHero(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.heroService.getHero(id).subscribe(hero => this.hero = hero);\n  }\n\n  goBack(): void {\n    this.location.back(); // 导航回到上一个视图\n  }\n\n  save(): void {\n    this.heroService.updateHero(this.hero).subscribe(() => this.goBack());\n  }\n}\n","<button (click)=\"goBack()\">go back</button>\n<button (click)=\"save()\">save</button>\n<div *ngIf=\"hero\">\n    <h2>{{ hero.name | uppercase }} Details</h2>\n    <div><span>id: </span>{{ hero.id }}</div>\n    <div>\n        <label>name:\n            <input [(ngModel)]=\"hero.name\" placeholder=\"name\">\n        </label>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\n\nimport { Hero } from '../Hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-search',\n  templateUrl: './hero-search.component.html',\n  styleUrls: [ './hero-search.component.scss' ]\n})\nexport class HeroSearchComponent implements OnInit {\n  heroes$: Observable<Hero[]>;\n\n  // Subject 既是可观察对象的数据源，本身也是 Observable。 你可以像订阅任何 Observable 一样订阅 Subject。\n  private searchTerms = new Subject<string>();\n\n  constructor(private heroService: HeroService) {}\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.heroService.searchHeroes(term)),\n    );\n  }\n}\n","<div id=\"search-component\">\n    <h4><label for=\"search-box\">Hero Search</label></h4>\n    <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\">\n    <ul class=\"search-result\">\n        <li *ngFor=\"let hero of heroes$ | async\">\n            <a routerLink=\"/detail/{{ hero.id }}\">{{ hero.name }}</a>\n        </li>\n    </ul>\n</div>","import { Injectable } from '@angular/core';\nimport { Hero } from './Hero';\nimport { HEROES } from './mock-heroes';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\n// 与后端交互\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n  private heroesUrl = 'api/heroes'; // URL to web api\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(\n    private messageService: MessageService,\n    private http: HttpClient\n  ) { }\n\n  /**\n   * 获取英雄列表\n   */\n  getHeroes(): Observable<Hero[]> {\n    // 服务中嵌套服务\n    // this.messageService.add('HeroService: fetched heroes');\n\n    // return of(HEROES);\n    return this.http.get<Hero[]>(this.heroesUrl)\n      .pipe(\n        tap(_ => this.log('fetched heroes')),\n        catchError(this.handleError<Hero[]>('getHeroes', []))\n      );\n  }\n\n  /** PUT: update the hero on the server */\n  updateHero(hero: Hero): Observable<any> {\n    return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap(_ => this.log(`updated hero id=${hero.id}`)),\n      catchError(this.handleError<any>('updateHero'))\n    );\n  }\n\n  /**\n   * 获取特定英雄\n   * @param id 英雄id\n   */\n  getHero(id: number): Observable<Hero> {\n    // this.messageService.add(`HeroService: fetched hero id=${id}`);\n    // return of(HEROES.find(hero => hero.id === id));\n\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get<Hero>(url).pipe(\n      tap(_ => this.log(`fetched hero id=${id}`)),\n      catchError(this.handleError<Hero>(`getHero id=${id}`))\n    );\n  }\n\n  // 保留对 MessageService 的注入，但是因为你将频繁调用它，因此请把它包裹进一个私有的 log 方法中\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** POST: add a new hero to the server */\n  addHero(hero: Hero): Observable<Hero> {\n    return this.http.post<Hero>(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap((newHero: Hero) => this.log(`added hero w/ id=${newHero.id}`)),\n      catchError(this.handleError<Hero>('addHero'))\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  deleteHero(hero: Hero | number): Observable<Hero> {\n    const id = typeof hero === 'number' ? hero : hero.id;\n    const url = `${this.heroesUrl}/${id}`;\n\n    return this.http.delete<Hero>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted hero id=${id}`)),\n      catchError(this.handleError<Hero>('deleteHero'))\n    );\n  }\n\n  /* GET heroes whose name contains search term */\n  searchHeroes(term: string): Observable<Hero[]> {\n    if (!term.trim()) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n    return this.http.get<Hero[]>(`${this.heroesUrl}/?name=${term}`).pipe(\n      tap(x => x.length ?\n        this.log(`found heroes matching \"${term}\"`) :\n        this.log(`no heroes matching \"${term}\"`)),\n      catchError(this.handleError<Hero[]>('searchHeroes', []))\n    );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Hero } from 'src/app/Hero';\nimport { HEROES } from 'src/app/mock-heroes';\nimport { HeroService } from '../hero.service';\nimport { MessageService } from '../message.service';\n\n@Component({\n    selector: 'app-heroes',\n    templateUrl: './heroes.component.html',\n    styleUrls: ['./heroes.component.scss']\n})\nexport class HeroesComponent implements OnInit {\n    // selectedHero: Hero;\n    heroes: Hero[];\n\n    constructor(\n        private heroService: HeroService,\n        private messageService: MessageService\n    ) { }\n\n    ngOnInit(): void {\n        this.getHeroes();\n    }\n\n    /**\n     * 获取选中的英雄\n     * @param hero 选中英雄对象\n     */\n    // onSelected(hero: Hero): void {\n    //     this.selectedHero = hero;\n    //     this.messageService.add(`HeroesComponent: Selected hero id=$${hero.id}`);\n    // }\n\n    add(name: string): void {\n        name = name.trim();\n        if (!name) { return; }\n        this.heroService.addHero({ name } as Hero)\n            .subscribe(hero => {\n                this.heroes.push(hero);\n            });\n    }\n\n    /**\n     * 获取英雄列表\n     */\n    getHeroes(): void {\n        this.heroService.getHeroes().subscribe(heroes => this.heroes = heroes);\n    }\n\n    delete(hero: Hero): void {\n        this.heroes = this.heroes.filter(h => h !== hero);\n        this.heroService.deleteHero(hero).subscribe();\n    }\n}\n","<h2>My Heroes</h2>\n\n<!-- add -->\n<div>\n    <label>Hero name:\n        <input #heroName>\n    </label>\n    <button (click)=\"add(heroName.value);heroName.value=''\">add</button>\n</div>\n\n<ul class=\"heroes\">\n    <!-- <li *ngFor=\"let hero of heroes\" [class.selected]=\"hero === selectedHero\" (click)=\"onSelected(hero)\">\n        <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n    </li> -->\n    <li *ngFor=\"let hero of heroes\">\n        <a routerLink=\"/detail/{{ hero.id }}\">\n            <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n        </a>\n        <button class=\"delete\" title=\"delete hero\" (click)=\"delete(hero)\">delete</button>\n    </li>\n</ul>","import { Injectable } from '@angular/core';\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { Hero } from './Hero';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const heroes = [\n      { id: 11, name: 'Dr Nice' },\n      { id: 12, name: 'Narco' },\n      { id: 13, name: 'Bombasto' },\n      { id: 14, name: 'Celeritas' },\n      { id: 15, name: 'Magneta' },\n      { id: 16, name: 'RubberMan' },\n      { id: 17, name: 'Dynama' },\n      { id: 18, name: 'Dr IQ' },\n      { id: 19, name: 'Magma' },\n      { id: 20, name: 'Tornado' }\n    ];\n    return {heroes};\n  }\n\n  // Overrides the genId method to ensure that a hero always has an id.\n  // If the heroes array is empty,\n  // the method below returns the initial number (11).\n  // if the heroes array is not empty, the method below returns the highest\n  // hero id + 1.\n  genId(heroes: Hero[]): number {\n    return heroes.length > 0 ? Math.max(...heroes.map(hero => hero.id)) + 1 : 11;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(\n    // 必须公共属性，因为要在模板中绑定到它\n    public messageService: MessageService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"messageService.messages.length\">\n    <h2>Messages</h2>\n    <button class=\"clear\" (click)=\"messageService.clear()\">clear</button>\n    <div *ngFor='let message of messageService.messages'> {{message}} </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}